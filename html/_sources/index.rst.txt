Sphinxの練習
==========================

.. toctree::
   :maxdepth: 2
   :hidden:
   
   test1
   test2

SphinxはPythonのドキュメンテーション生成ツールです。特に、Pythonプロジェクトの公式ドキュメントを作成する際に広く使用されています。しかし、その機能はPythonに限定されず、他のプログラミング言語のドキュメント作成にも応用可能です。

Sphinxの特徴
------------
* 自動APIドキュメント生成
* 多様な出力形式
* 拡張性とカスタマイズ性

今回の目的
----------

SphinxをインストールしてHTMLを作成するまでの一連の流れを行います。


使い方
------

#. インストール

   Sphinxライブラリをインストールします。
   
   .. code-block:: none

      pip install sphinx

#. プロジェクトのセットアップ

   Sphinxプロジェクトをセットアップします。
   
   #. プロジェクトフォルダを作成します。``例：sphinx-test``
   #. 作成したプロジェクトフォルダに移動してコマンドラインで次のコマンドを実行します。
   
      .. code-block:: none

         sphinx-quickstart

   #. コマンドラインでプロジェクトの作成に必要な質問に答えていきます。後で変更できます。
   
      * プロジェクト名：``例：成りあがり``
      * 著者名：``YAZAWA``
      * プロジェクトのリリース：``例：1978.7.25``
   
   #. プロジェクトファイルが生成されます。
   ::
      
       sphinx-test/    <- ルート（プロジェクト）ディレクトリ
       ├── _build       <- ビルドされたドキュメントが格納されるディレクトリ
       │   ├── doctrees
       │   └── html
       ├── _static      <- 静的ファイル（CSS、画像など）を格納するディレクトリ
       ├── _templates   <- カスタムテンプレートを格納するディレクトリ
       ├── conf.py      <- Sphinx設定ファイル
       ├── index.rst    <- メインのドキュメントファイル（トップページ）
       ├── make.bat     <- Windows用のビルドスクリプト
       └── Makefile     <- Unix/Linux用のビルドスクリプト::

#. ドキュメントの作成

   ドキュメントは ``reStructuredText`` というファイル形式で記述します。作成された ``index.rst`` がメインページとなるので、このファイルに内容を記述していきます。複数ページを作成する場合は ``○○.rst`` を作成して、HTML上でリンクさせることもできます。
   
   ``reStructuredTextとは``

   Pythonプログラミング言語の公式ドキュメントの作成など広く使用される軽量マークアップ言語です。プレーンテキスト形式でドキュメントを書くことを目的としています。reStructuredTextは、Pythonの公式ドキュメンテーションを含む多くのプロジェクトで採用されています。

    #. シンプルな構文
       reStructuredTextは、読みやすく理解しやすい構文を使用します。例えば、アスタリスク（*）やアンダースコア（_）を使用して強調や斜体を表現します。

    #. ドキュメント構造
       タイトル、節、小節などの文書構造は、明確な規則に基づいて記述されます。これにより、整理されたドキュメントを簡単に作成できます。

    #. 拡張性
       reStructuredTextはカスタマイズ可能で、様々なドキュメントの要件に合わせて拡張できます。

    #. 変換可能性
       reStructuredTextドキュメントは、HTML、LaTeX、PDF、プレーンテキストなど、さまざまな形式に変換することができます。

#. ドキュメントの記述

   ``index.rst`` に文章を書いていきます。今回はHTMLの作成までを行うので、画面右の**ソースコードを表示**をクリックしてこのページをすべて上書きで張り付けてください。   


#. ビルド

   ドキュメントをHTMLやPDFなどの形式にビルドします。以下のコマンドで行います

   .. code-block:: none

      make html

   これでHTMLが作成されます。
   ::

       sphinx-test/    <- ルート（プロジェクト）ディレクトリ
         ├── _build/
         │   ├── html/
         │   │   ├── index.html  <- これ 
         │   │   ├── ...

#. カスタマイズ

   ``conf.py`` ファイルを編集することで、プロジェクトの設定をカスタマイズできます。テーマの変更、拡張機能の追加などが可能です。
   ここでは、テーマの変更方法を確認します。Sphinxには標準で以下の 10 個のテーマが用意されています。以下のように変更できます。
   
   conf.py

   .. code-block:: Python

      html_theme = 'bizstyle'
      # 下記オプションでバックグラウンドの色を変更できます。
      html_theme_options = {'maincolor' : "#696969"}


   各テーマのイメージや設定方法の詳細は、`Sphinx-Users.jp <https://sphinx-users.jp/cookbook/changetheme/index.html>`__ で確認してください。

   設定ができたら再度以下のコマンドでHTMLを作成します。

   .. code-block:: none

      make html

書き方はほとんどマークダウンなので必要に応じて調べてながら書けば大丈夫かと。。